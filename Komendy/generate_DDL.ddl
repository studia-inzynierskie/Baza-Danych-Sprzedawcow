-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2023-01-18 15:03:10 CET
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c

CREATE USER bd2c059 IDENTIFIED BY ACCOUNT UNLOCK ;

CREATE USER bd2c059_app IDENTIFIED BY ACCOUNT UNLOCK ;


-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE ankiety (
    id_ankiety       NUMBER(7) NOT NULL,
    id_sprzedawcy    NUMBER(5) NOT NULL,
    login_klienta    VARCHAR2(30 CHAR),
    data_wypelnienia DATE NOT NULL
);

COMMENT ON TABLE ankiety IS
    'Encja Ankiety reprezentuje ankiety wype³niane przez klientów oceniaj¹cych sprzedawców. Ankieta posiada jedynie data jej wype³nienia, lecz jest skorelowana z odpowiedziami, które dok³adnie wskazuj¹ z których pytañ sk³ada³a siê ankieta i jakie by³y odpowiedzi na te pytania.'
    ;

COMMENT ON COLUMN ankiety.id_ankiety IS
    'PUID - sztucznie generowany';

COMMENT ON COLUMN ankiety.id_sprzedawcy IS
    'ID sprzedawcy którego dotyczy ankieta';

COMMENT ON COLUMN ankiety.data_wypelnienia IS
    'Data wskazuj¹ca kiedy ankieta zosta³a wype³niona';

CREATE INDEX ank_sprzed_fk_idx ON
    ankiety (
        id_sprzedawcy
    ASC );

CREATE INDEX ank_kli_fk_idx ON
    ankiety (
        login_klienta
    ASC );
    
GRANT DELETE, INSERT, SELECT, UPDATE ON ankiety TO bd2c059_app;


ALTER TABLE ankiety ADD CONSTRAINT ank_pk PRIMARY KEY ( id_ankiety );

CREATE TABLE dealerzy (
    id_dealera     NUMBER(4) NOT NULL,
    kod_pocztowy   CHAR(6 CHAR) NOT NULL,
    miejscowosc    VARCHAR2(30 CHAR) NOT NULL,
    ulica          VARCHAR2(30 CHAR) NOT NULL,
    nr_budynku     VARCHAR2(10 CHAR) NOT NULL,
    nazwa          VARCHAR2(60 CHAR) NOT NULL,
    nip            CHAR(10 CHAR) NOT NULL,
    data_zalozenia DATE
);

COMMENT ON TABLE dealerzy IS
    'Encja Dealera reprezentuje firmê która mo¿e byæ wiêkszym dystrybutorem lub mo¿e zajmowaæ siê produkcj¹ samochodów danej marki.
Firma ta posiada unikalny NIP, nazwê przedsiêbiorstwa, a tak¿e mo¿e posiadaæ datê za³o¿enia.';

COMMENT ON COLUMN dealerzy.id_dealera IS
    'PUID - sztucznie generowany';

COMMENT ON COLUMN dealerzy.kod_pocztowy IS
    'S³u¿y do zlokalizowania przedsiêbiorstwa';

COMMENT ON COLUMN dealerzy.miejscowosc IS
    'S³u¿y do zlokalizowania przedsiêbiorstwa';

COMMENT ON COLUMN dealerzy.ulica IS
    'S³u¿y do zlokalizowania przedsiêbiorstwa';

COMMENT ON COLUMN dealerzy.nr_budynku IS
    'S³u¿y do zlokalizowania przedsiêbiorstwa';

COMMENT ON COLUMN dealerzy.nazwa IS
    'Nazwa przedsiêbiorstwa sprzedaj¹cego samochody';

COMMENT ON COLUMN dealerzy.nip IS
    'NIP firmy - musi byæ unikalny, ka¿da firma ma inny nip';

COMMENT ON COLUMN dealerzy.data_zalozenia IS
    'data wskazuj¹ca kiedy przedsiêbiorstwo zosta³o za³o¿one - atrybut opcjonalny';

GRANT DELETE, INSERT, SELECT, UPDATE ON dealerzy TO bd2c059_app;


ALTER TABLE dealerzy
    ADD CONSTRAINT deal_kodpocz_ck CHECK ( kod_pocztowy LIKE '__-___'
                                           AND kod_pocztowy NOT LIKE '% ' );

ALTER TABLE dealerzy ADD CONSTRAINT deal_nip_ck CHECK ( nip NOT LIKE '% ' );

ALTER TABLE dealerzy ADD CONSTRAINT deal_pk PRIMARY KEY ( id_dealera );

ALTER TABLE dealerzy ADD CONSTRAINT deal_nip_un UNIQUE ( nip );

CREATE TABLE klienci (
    login    VARCHAR2(30 CHAR) NOT NULL,
    haslo    VARCHAR2(40 CHAR) NOT NULL,
    email    VARCHAR2(40 CHAR) NOT NULL,
    imie     VARCHAR2(30 CHAR),
    nazwisko VARCHAR2(40 CHAR)
);

COMMENT ON TABLE klienci IS
    'Encja Klienta reprezentuje klientów którzy zakupili samochody u sprzedawców. W za³o¿eniu s¹ oni osobami fizycznymi wiêc posiadaj¹ imiê oraz nazwisko. Dodatkowo mog¹ podaæ swój pesel, lecz jest to dana opcjonalna.'
    ;

COMMENT ON COLUMN klienci.login IS
    'Login u¿ywany przy logowaniu, ka¿dy u¿ytkownik musi mieæ inny login, który jednoznacznie go identyfikuje';

COMMENT ON COLUMN klienci.haslo IS
    'Has³o u¿ywane przy logowaniu, musi mieæ przynajmniej 80 znaków';

COMMENT ON COLUMN klienci.email IS
    'Email - s³u¿y do kontaktu, a tak¿e jest potrzebny do utworzenia konta';

COMMENT ON COLUMN klienci.imie IS
    'Imie klienta';

COMMENT ON COLUMN klienci.nazwisko IS
    'Nazwisko klienta';

GRANT DELETE, INSERT, SELECT, UPDATE ON klienci TO bd2c059_app;


ALTER TABLE klienci
    ADD CONSTRAINT kli_email_ck CHECK ( email LIKE '%@%.%'
                                        AND email NOT LIKE '@%'
                                        AND email NOT LIKE '%@%@%' );

ALTER TABLE klienci
    ADD CONSTRAINT kli_haslo_ck CHECK ( length(haslo) >= 8 );

ALTER TABLE klienci ADD CONSTRAINT kli_pk PRIMARY KEY ( login );

ALTER TABLE klienci ADD CONSTRAINT kli_email_un UNIQUE ( email );

CREATE TABLE odpowiedzi (
    id_ankiety NUMBER(7) NOT NULL,
    id_pytania NUMBER(3) NOT NULL,
    odpowiedz  NUMBER(2, 1)
);

COMMENT ON TABLE odpowiedzi IS
    'Encja Odpowiedzi jest encj¹ ³¹cz¹c¹ ankiety z pytaniami. Dodatkowo posiada odpowiedzi, jakich udzieli³ klient odpowiadaj¹c na konkretne pytanie. Odpowiedzi s¹ liczbami w skali 1-5.'
    ;

COMMENT ON COLUMN odpowiedzi.id_ankiety IS
    'ID ankiety której dotyczy odpowiedŸ';

COMMENT ON COLUMN odpowiedzi.id_pytania IS
    'ID pytania którego dotyczy odpowiedŸ';

COMMENT ON COLUMN odpowiedzi.odpowiedz IS
    'OdpowiedŸ klienta na dane pytanie - mo¿liwe wartoœci to [-1, -0.5, 0, 0.5, 1]';

CREATE INDEX odp_ank_fk_idx ON
    odpowiedzi (
        id_ankiety
    ASC );

CREATE INDEX odp_pyt_fk_idx ON
    odpowiedzi (
        id_pytania
    ASC );
    
GRANT DELETE, INSERT, SELECT, UPDATE ON odpowiedzi TO bd2c059_app;


ALTER TABLE odpowiedzi
    ADD CONSTRAINT odp_odpowiedz_ck CHECK ( odpowiedz IN ( - 1, - 0.5, 0, 0.5, 1 ) );

ALTER TABLE odpowiedzi ADD CONSTRAINT odp_pk PRIMARY KEY ( id_ankiety,
                                                           id_pytania );

CREATE TABLE pytania (
    id_pytania NUMBER(3) NOT NULL,
    tresc      VARCHAR2(500 CHAR) NOT NULL
);

COMMENT ON TABLE pytania IS
    'Encja Pytania zawiera listê mo¿liwych pytañ, które mo¿e zawieraæ ankieta. Ka¿de pytanie posiada treœæ.';

COMMENT ON COLUMN pytania.id_pytania IS
    'PUID - sztucznie generowany';

COMMENT ON COLUMN pytania.tresc IS
    'Treœæ pytania';

GRANT DELETE, INSERT, SELECT, UPDATE ON pytania TO bd2c059_app;


ALTER TABLE pytania ADD CONSTRAINT pyt_pk PRIMARY KEY ( id_pytania );

CREATE TABLE sprzedawcy (
    id_sprzedawcy NUMBER(5) NOT NULL,
    id_dealera    NUMBER(4) NOT NULL,
    imie          VARCHAR2(30 CHAR) NOT NULL,
    nazwisko      VARCHAR2(40 CHAR) NOT NULL,
    email         VARCHAR2(40 CHAR) NOT NULL,
    pesel         CHAR(11 CHAR)
);

COMMENT ON TABLE sprzedawcy IS
    'Encja Sprzedawcy reprezentuje konkretne podmioty, w za³o¿eniu osoby które s¹ zatrudniane przez Dealera i sprzedaj¹ samochody w konkretnych miejscach (salon lub miejsce zamieszkania). Sprzedawca posiada unikalny pesel, nazwê (w za³o¿eniu jest on osob¹, lecz mo¿e sprzedawaæ samochody pod inn¹ nazw¹) oraz dane umo¿liwiaj¹c¹ zlokalizowanie jego salonu tj. kod pocztowy, miejscowoœæ, ulicê oraz numer domu.'
    ;

COMMENT ON COLUMN sprzedawcy.id_sprzedawcy IS
    'PUID - sztucznie generowany';

COMMENT ON COLUMN sprzedawcy.id_dealera IS
    'ID Dealera u którego pracuje sprzedawca';

COMMENT ON COLUMN sprzedawcy.imie IS
    'Imiê sprzedawcy';

COMMENT ON COLUMN sprzedawcy.nazwisko IS
    'Nazwisko sprzedawcy';

COMMENT ON COLUMN sprzedawcy.email IS
    'Email - mo¿e s³u¿yæ do kontaktu ze sprzedawc¹ - opcjonalny';

COMMENT ON COLUMN sprzedawcy.pesel IS
    'PESEL - identyfikuje sprzedawce jako osobê';

CREATE INDEX sprzed_deal_fk_idx ON
    sprzedawcy (
        id_dealera
    ASC );
    
GRANT DELETE, INSERT, SELECT, UPDATE ON sprzedawcy TO bd2c059_app;


ALTER TABLE sprzedawcy
    ADD CONSTRAINT sprzed_email_ck CHECK ( email LIKE '%@%.%'
                                           AND email NOT LIKE '@%'
                                           AND email NOT LIKE '%@%@%' );

ALTER TABLE sprzedawcy ADD CONSTRAINT sprzed_pesel_ck CHECK ( pesel NOT LIKE '% ' );

ALTER TABLE sprzedawcy ADD CONSTRAINT sprzed_pk PRIMARY KEY ( id_sprzedawcy );

ALTER TABLE sprzedawcy ADD CONSTRAINT sprzed_pesell_un UNIQUE ( pesel );

ALTER TABLE sprzedawcy ADD CONSTRAINT sprzed_email_un UNIQUE ( email );

ALTER TABLE ankiety
    ADD CONSTRAINT ank_kli_fk FOREIGN KEY ( login_klienta )
        REFERENCES klienci ( login )
            ON DELETE CASCADE;

ALTER TABLE ankiety
    ADD CONSTRAINT ank_sprzed_fk FOREIGN KEY ( id_sprzedawcy )
        REFERENCES sprzedawcy ( id_sprzedawcy );

ALTER TABLE odpowiedzi
    ADD CONSTRAINT odp_ank_fk FOREIGN KEY ( id_ankiety )
        REFERENCES ankiety ( id_ankiety )
            ON DELETE CASCADE;

ALTER TABLE odpowiedzi
    ADD CONSTRAINT odp_pyt_fk FOREIGN KEY ( id_pytania )
        REFERENCES pytania ( id_pytania );

ALTER TABLE sprzedawcy
    ADD CONSTRAINT sprzed_deal_fk FOREIGN KEY ( id_dealera )
        REFERENCES dealerzy ( id_dealera );

CREATE OR REPLACE TRIGGER fknto_ankiety BEFORE
    UPDATE OF login_klienta ON ankiety
    FOR EACH ROW
BEGIN
    IF :old.login_klienta IS NOT NULL THEN
        raise_application_error(-20225, 'Non Transferable FK constraint ANK_KLI_FK on table Ankiety is violated');
    END IF;
END;
/

CREATE OR REPLACE TRIGGER fkntm_ankiety BEFORE
    UPDATE OF id_sprzedawcy ON ankiety
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table Ankiety is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_odpowiedzi BEFORE
    UPDATE OF id_pytania, id_ankiety ON odpowiedzi
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table Odpowiedzi is violated');
END;
/

CREATE SEQUENCE ank_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER ank_seq_trig BEFORE
    INSERT ON ankiety
    FOR EACH ROW
    WHEN ( new.id_ankiety IS NULL )
BEGIN
    :new.id_ankiety := ank_seq.nextval;
END;
/

CREATE SEQUENCE deal_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER deal_seq_trig BEFORE
    INSERT ON dealerzy
    FOR EACH ROW
    WHEN ( new.id_dealera IS NULL )
BEGIN
    :new.id_dealera := deal_seq.nextval;
END;
/

CREATE SEQUENCE pyt_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER pyt_seq_trig BEFORE
    INSERT ON pytania
    FOR EACH ROW
    WHEN ( new.id_pytania IS NULL )
BEGIN
    :new.id_pytania := pyt_seq.nextval;
END;
/

CREATE SEQUENCE sprzed_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER sprzed_seq_trig BEFORE
    INSERT ON sprzedawcy
    FOR EACH ROW
    WHEN ( new.id_sprzedawcy IS NULL )
BEGIN
    :new.id_sprzedawcy := sprzed_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             6
-- CREATE INDEX                             5
-- ALTER TABLE                             22
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           7
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          4
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
